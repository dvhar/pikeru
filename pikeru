#!/bin/bash
# This script needs a venv in this direcotry. It will try to create one for you if you don't have one.
# set debug=1 if you're having trouble getting it working. It logs to /tmp/pk.log

debug=0

logfile=/tmp/pk.log

# LD_PRELOAD is set by the browser and can interfere with an opencv lib used to display video frames
unset LD_PRELOAD


DIR="$(pwd)"
cd "$(dirname "$(readlink -f "$0")")"

TITLE="File Picker"
MODE="files"
MIME_LIST=""
update=0
xconfig="$HOME/.config/xdg-desktop-portal"

usage(){
cat << EOF
$0 [ -t title -m mode -p path -i mimes -u -h -x ]
  regular usage options:
	-t <title>
		Set the title for the filepicker window
	-m <mode>
		Set the mode for file selection. One of [file files save dir]. Default is 'files'
	-p <path>
		Initial path. Should be a directory when not in save mode, otherwise a file path. default is $HOME
	-i <mimes>
		Space separaated list if mime types to filter for
	-h
		Show this help message
  setup options:
	-u
		Update the python dependencies. Useful if deps were added after a git pull
	-x
		Configure xdg-desktop-portal to use pikeru. This installs portals.conf in ${xconfig}.
		This is not necessary if installed with the install.sh script.
EOF
exit
}

portalconfig(){
bash ./xdg_portal/contrib/setconfig.sh
cat << EOF
xdg portal has been configured for $USER to use pikeru.
If using firefox, make sure to set GTK_USE_PORTAL=1, and in 'about:config', set 'widget.use-xdg-desktop-portal.file-picker' to '1'.
EOF
exit
}

[ $debug = 1 ] && echo "launcher args: $*" >> $logfile
while getopts "e:t:m:p:i:uhx" opt; do
  case $opt in
    e)
      PARENT="$OPTARG"
      ;;
    t)
      TITLE="$OPTARG"
      ;;
    m)
      MODE="$OPTARG"
      ;;
    p)
      DIR="$OPTARG"
      ;;
    i)
      MIME_LIST="$OPTARG"
      ;;
    u)
      update=1
      ;;
    h)
      usage
      ;;
    x)
      portalconfig
      ;;
    \?)
      echo "Invalid option: -$opt $OPTARG" | tee -a $logfile > /dev/stderr
      exit 1
      ;;
  esac
done

if [[ ! "$MODE" =~ ^(file|files|dir|save)$ ]]; then
  echo "Error: Invalid mode flag value (-m). It should be one of [file files dir save]." | tee -a $logfile > /dev/stderr
  exit 1
fi

if [ ! -f "./venv/bin/activate" ]; then
	echo 'No venv found. Creating one now...' > /dev/stderr
	python3 -m venv venv
	. ./venv/bin/activate
	pip3 install -r requirements.txt
else
	. ./venv/bin/activate
	[ $update = 1 ] && pip3 install -r requirements.txt
fi

cmd="python ./main.py \
	--mode '${MODE}' \
	--path \"${DIR}\" \
	--title '${TITLE}' \
	--mime_list '${MIME_LIST[@]:-}' \
	--parent '${PARENT:-}'" 
[ $debug = 1 ] && echo "cmd: $cmd" >> $logfile

if [ -r ./postprocess.sh ] && [ ! -z "$POSTPROCESS_DIR" ]; then
	eval "$cmd"|bash ./postprocess.sh
else
	eval "$cmd"
fi
